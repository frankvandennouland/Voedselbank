/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voedselbank;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;

/**
 *
 * @author Niek van der Starre
 */
public class ClientZoeken extends javax.swing.JFrame {

    private Connection connection;

    /**
     * Creates new form ClientZoeken
     */
    public ClientZoeken() {
        initComponents();
        setTitle("Cliënt zoeken");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        kaartnummerVeld = new javax.swing.JTextField();
        zoekKnop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientenLijst = new javax.swing.JList<>();
        wijzigKnop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Kaartnummer");

        kaartnummerVeld.setDocument(new TextfieldLimit(11));

        zoekKnop.setText("Zoeken");
        zoekKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoekKnopActionPerformed(evt);
            }
        });

        clientenLijst.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        clientenLijst.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(clientenLijst);

        wijzigKnop.setText("Wijzig");
        wijzigKnop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wijzigKnopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(wijzigKnop, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kaartnummerVeld, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(zoekKnop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kaartnummerVeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(zoekKnop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(wijzigKnop)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zoekKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoekKnopActionPerformed

        DefaultListModel<Client> model = new DefaultListModel<>();

        try {
            connection = SimpleDataSourceV2.getConnection();
            PreparedStatement prestatement = connection.prepareStatement("SELECT * FROM Cliënt WHERE kaartnummer = ?");

            prestatement.setString(1, kaartnummerVeld.getText());

            ResultSet rs = prestatement.executeQuery();

            while (rs.next()) {
                int ID = rs.getInt("ID_cliënt");
                int kaartnummer = rs.getInt("kaartnummer");
                String naam = rs.getString("naam");
                String telefoonnummer = rs.getString("telefoonnummer");
                String adres = rs.getString("adres");
                String postcode = rs.getString("postcode");
                String plaats = rs.getString("plaats");
                String email = rs.getString("email");
                String mobielnummer = rs.getString("mobielnummer");
                int aantalPersonen = rs.getInt("aantalPersonen");
                String Status = rs.getString("status_cliënt");
                String naamPartner = rs.getString("naam_partner");
                int uitgiftepunt_ID = rs.getInt("ID_uitgiftepunt");
                int verwijzer_ID = rs.getInt("ID_verwijzer");
                int verwijzing_ID = rs.getInt("ID_verwijzing");

                Client client = new Client(ID, kaartnummer, naam, telefoonnummer, adres, postcode, plaats, email, mobielnummer, aantalPersonen,
                        Status, naamPartner, uitgiftepunt_ID, verwijzer_ID, verwijzing_ID);

                model.addElement(client);

            }

            clientenLijst.setModel(model);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_zoekKnopActionPerformed

    private void wijzigKnopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wijzigKnopActionPerformed
        if (!clientenLijst.isSelectionEmpty()) {
            ClientWijzigen w = new ClientWijzigen(clientenLijst.getSelectedValue());
            w.setOpener(this);
            w.setVisible(true);
        }
    }//GEN-LAST:event_wijzigKnopActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Client> clientenLijst;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kaartnummerVeld;
    private javax.swing.JButton wijzigKnop;
    private javax.swing.JButton zoekKnop;
    // End of variables declaration//GEN-END:variables
}
